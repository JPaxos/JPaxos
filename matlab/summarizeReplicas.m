function summarizeReplicas()

% Descriptive statistics of the data set
% This function removes the first 10% of the data

statsFile = 'replicas.stats.txt';
if ~isempty(dir(statsFile))
    disp 'Skipping directory'
    return
end

% Analyze only the largest file. It should be the one generated by the
% leader
filename = '';
maxsize = 0;
files = dir('replica-*.stats.log');
for f = files'    
    if f.bytes > maxsize 
        filename = f.name;
        maxsize = f.bytes;
    end
end
   
disp(['Opening ' filename]);
data = load(filename);
data = filterData(data);
    
if isempty(data)    
    fprintf(statsFD, 'Count:  & 0\n');
    fclose(statsFD);
    fclose(summaryFD);
    return;
end

runStart = data(1,2);
data(:,2) = data(:,2)-runStart;


totalInst = length(data(:,1));
totalReqs = sum(data(:,4));
duration = (data(totalInst,2)+data(totalInst,3))-data(1,2);

[muhat, sigmahat, muCI] = normfit(data(:,3));
latency = muhat;
latencyci = muhat-muCI(1);

% Scale from microseconds to milliseconds
duration = duration/1000;
latency = latency/1000;
latencyci = latencyci/1000;

thrpInst = (1000*totalInst)/duration;    
thrpReqs = (1000*totalReqs)/duration;

[muhat, sigmahat, muCI] = normfit(data(:,5));
batchSize = muhat;
batchSizeci = muhat-muCI(1);

totalRetrans = sum(data(:,6));
[muhat, sigmahat, muCI] = normfit(data(:,6));
avgRetrans = muhat;
avgRetransci = muhat-muCI(1);

[muhat, sigmahat, muCI] = normfit(data(:,7));
avgAlpha = muhat;
avgAlphaci = muhat-muCI(1);

summaryFD = fopen('replicas.stats.txt', 'w');
fprintf(summaryFD, '%% #consensus time thrpInst thrpReqs latency latencyci batchSz batchSzci totalRetrans avgRetrans avgAlpha avgAlphaci\n');
fprintf(summaryFD, '%d\t%2.3f\t%2.3f\t%2.3f\t%2.3f\t%2.3f\t%2.2f\t%2.2f\t%d\t%2.2f\t%2.2f\t%2.2f\n', ...
    totalInst, duration, thrpInst, thrpReqs, latency, latencyci, ...
    batchSize, batchSizeci, totalRetrans, avgRetrans, avgAlpha, avgAlphaci);
fclose(summaryFD);

return

statsFD = fopen('replicas.stats.tex', 'w');
fprintf(statsFD, 'Count:        & %d \\\\\n', totalInst);
fprintf(statsFD, 'TotalTime(sumI): & %d \\\\\n', sum(data(:,4)));
fprintf(statsFD, 'TotalTime(real): & %d \\\\\n', duration);
fprintf(statsFD, 'Throughput     : & %d \\\\\n', throughput);
fprintf(statsFD, 'Latency:\n');
fprintf(statsFD, '  Min:  & %d \\\\\n', min(data(:,4)));
fprintf(statsFD, '  Max:  & %d \\\\\n', max(data(:,4)));
fprintf(statsFD, '  Median:       & %2.2f \\\\\n', median(data(:,4)));
fprintf(statsFD, '  Mean:         & %2.2f \\\\\n', mean(data(:,4)));
fprintf(statsFD, '  Std:          & %2.2f\n', std(data(:,4)));
fprintf(statsFD, 'BatchSize:\n');
fprintf(statsFD, '  Min:         & %d \\\\\n', min(data(:,5)));
fprintf(statsFD, '  Max:         & %d \\\\\n', max(data(:,5)));
fprintf(statsFD, '  Median:       & %2.2f \\\\\n', median(data(:,5)));
fprintf(statsFD, '  Mean:         & %2.2f \\\\\n', mean(data(:,5)));
fprintf(statsFD, '  Std:          & %2.2f\n', std(data(:,5)));
fclose(statsFD);


% % generate the histogram
% % Reset the current figure
% clf reset
% % Generate the histogram
% %edges = 20::300;
% %cumsum = histc(data(:,5), edges);
% %bar(edges, cumsum);
% 
% name = 'replicas';
% % Remove all elements bigger than 1000
% %v = data(:,5);
% %v(v>1000) = [];
% %hist(v, 25);
% hist(data(:,4), 50);
% %xlim([0 1000])
% set(gca, 'FontSize', 16)
% xlabel('Time (ms)');
% ylabel('Occurrences');
% title([name,' duration']);
% % Save the current figure
% file = [name, '-lat-hist.eps'];
% saveas(gcf, file, 'psc2')
% 
% % Now the cumulative distribution
% clf reset
% cdfplot(data(:,4));
% xmin = min(data(:,4))-10;
% xmax = max(data(:,4))+10; 
% xlim([xmin, xmax]);
% xlabel('Time (ms)');
% ylabel('ms');
% title([name,' duration']);
% file = [name, '-lat-cdf.eps'];
% saveas(gcf, file, 'psc2')
% 
% 
% hist(data(:,5), 50);
% %xlim([0 1000])
% set(gca, 'FontSize', 16)
% xlabel('Time (ms)');
% ylabel('Occurrences');
% title([name,' duration']);
% % Save the current figure
% file = [name, '-bsz-hist.eps'];
% saveas(gcf, file, 'psc2')
% 
% % Cumulative distribution
% clf reset
% cdfplot(data(:,5));
% xmin = min(data(:,5))-10;
% xmax = max(data(:,5))+10; 
% xlim([xmin, xmax]);
% xlabel('Time (ms)');
% ylabel('ms');
% title([name,' batch size']);
% file = [name, '-bsz-cdf.eps'];
% saveas(gcf, file, 'psc2')
% 
% %legend('Empirical','Theoretical','Location','NW')
% 
% % ; creates a new line on the matrix. ' transposes the matrix.
% %matrix = [Y; X]';
% %histFile = strcat(name, '.hist');
% %save(histFile, 'matrix', '-ASCII', '-TABS')
