#################################
### JPaxos configuration file ###
#################################

# units: bytes or milliseconds, unless other specified


### List of processes ###

# A process is described by:
# process.<id> = <address>:<port for replicas>:<port for clients>
process.0 = localhost:2021:3001
process.1 = localhost:2022:3002
process.2 = localhost:2023:3003


### System model ###

# Indirect consensus - values are packed in batches and transported
# outside Paxos protocol, the voting decides only the ID's of batches
#
# This balances network usage, as leader messages are smaller than if
# they would carry the value. This does not reduce network usage however.
#
IndirectConsensus = False
#IndirectConsensus = True

# Failure detector
#
# How long to wait until suspecting the leader.
#Default: 1000
FDSuspectTimeout = 1500
# Interval between sending heartbeats.
# Default: 500
FDSendTimeout = 500


# The crash model for this system. All crash models are not-byzantine.
# All crash-models may decide as long as the majority is up.
#
# CrashStop           Replicas may not recover.
#
# FullSS              all logs are written on disk. Replicas may recover.
#                     Supports catastrophic failures
#                     (i.e. all replicas may crash, f = n)
#
# ViewSS              disk used on view change only. Replicas may recover.
#                     Majority must be always up
#
# EpochSS             disk used on startup only. Replicas may recover.
#                     Majority must be always up
#
# Default: FullSS
#CrashModel = CrashStop
#CrashModel = FullSS
#CrashModel = ViewSS
CrashModel = EpochSS

# Location of the stable storage - the place for files of JPaxos logs.
# Will be used if the CrashModel needs stable storage.
# Please note, that each replica will append /<LocalId> to the log path.
#
# This setting may be overwritten also in code, with replica.setLogPath() method.
#
# Default:  jpaxosLogs
LogPath = jpaxosLogs


### Concurrency and optimization setup ###

# Maximum number of concurrently proposed instances.
# Default: 2
WindowSize = 2

# Maximum size of batches.
# Default: 65507
#
# The leader will try to batch requests in a single proposal to improve performance.
# This setting controls how big the batches can be before having to be sent.
# This value may be exceeded if a request is larger than the BatchSize.
BatchSize = 65507

# Maximum time a batch may be delayed starting from the time the first
# request is added to it.
# Default: 10
#
# A batch is sent either when it's full (reaches BatchSize) or this delay elapses.
MaxBatchDelay = 10

# Size of a buffer for reading client requests; larger requests than this
# size will cause extra memory allocation and freeing at each such request.
# This variable impacts memory usage, as each client connection
# pre-allocates such buffer.
# Default: 8212 (8kB request + 20B header size)
replica.ClientRequestBufferSize = 8212

# How the replica generates client IDs.
# Options:
# - ViewEpoch - combined view/epoch and sequential number. 
# - TimeBased - Prefix a timestamp generated by the server to the client ID
# - Simple - Use a sequentially generated number.
# ViewEpoch is theoretically correct in all models.
# TimeBased is practically correct in all models, in theory incorrect in all models.
# Simple is crash-stop only.
# 
# Default: ViewEpoch
#
ClientIDGenerator = ViewEpoch

### Snapshotting section ###

# Before any snapshot has been made, JPaxos needs to have an estimate of snapshot
# size in bytes.
# Default: 1024
FirstSnapshotEstimateBytes = 1024

# Ratio = \frac{log}{snapshot}. How bigger the log must be to ask
# Default 1.0
SnapshotAskRatio = 1.0

# Ratio = \frac{log}{snapshot}. How bigger the log must be to force
# Default 2.0
SnapshotForceRatio = 2.0

# Minimum count of instances before the ratio log size / snapshot size is calculated
# Default: 50
MinimumInstancesForSnapshotRatioSample = 50

# Minimum size of the log before the ratio log size / snapshot size is calculated
# Default: 10240
MinLogSizeForRatioCheckBytes = 10240


### Networking section ###

# Main protocol used to communicate between replicas. Options:
#  - TCP
#  - NIO (better TCP impl)
#  - UDP
#  - Multicast
#  - Generic - Uses UDP for small (<64KB) messages and TCP for larger messages
# Default: TCP
#Network = Multicast
#Network = TCP
Network = NIO

# Threshold used by GenericNetwork to send packets using
# UDP (size<=MaxUDPPacketSize) or TCP (size>MaxUDPPacketSize).
# Default: 65507
MaxUDPPacketSize = 65507

# Initial time of message retransmission
# Default: 1000
RetransmitTimeoutMilisecs = 1000

# If a TCP connection fails, how much to wait for another try
# Default: 1000
TcpReconnectMilisecs = 1000

# Number of threads used to read and write requests from clients.
# -1 for automatic tuning based on the number of CPUs available.   
#
# Default: -1
replica.SelectorThreads = -1

### Request forwarding to the leader section ###

# Whether a replica should forward client requests to the current leader or
# if should redirect the client to connect to the leader directly.
#
# Default: true
replica.ForwardClientRequests = true

# Maximum size of the batches of client requests sent by non-leader replicas to
# the leader. Applies only when request forwarding is enabled.
# 
# Default: 1450
replica.ForwardMaxBatchSize = 1450

# Maximum delay since a batch with client requests is started until it is sent to 
# the leader. Applies only when request forwarding is enabled.
# 
# Default: 50
replica.ForwardMaxBatchDelay = 50

# How long can the proposer / catch-up wait for batch values during view
# change / catching up, in milliseconds
#
# Default: 2500
TimeoutFetchBatchValue = 2500
